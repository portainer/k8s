apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portainer.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    io.portainer.kubernetes.application.stack: portainer
    {{- include "portainer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      {{- include "portainer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "portainer.selectorLabels" . | nindent 8 }}
    spec:
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 -}}      
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "portainer.serviceAccountName" . }}
      volumes:
         - name: "data"
           persistentVolumeClaim:
             claimName: {{ template "portainer.pvcName" . }}      
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.enterpriseEdition.enabled }}
          image: "{{ .Values.enterpriseEdition.image.repository }}:{{ .Values.enterpriseEdition.image.tag }}"
          imagePullPolicy: {{ .Values.enterpriseEdition.image.pullPolicy }}
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          args:
          {{- if (and (eq .Values.service.type "NodePort") (not (empty .Values.service.edgeNodePort))) }}
            - '--tunnel-port'
            - '{{ .Values.service.edgeNodePort }}'
          {{- end }}          
          {{- if (not (empty .Values.admin.password)) }}
            - '--admin-password'
            - '{{ .Values.admin.password }}'
          {{- end }}          
          volumeMounts:
            - name: data
              mountPath: /data
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: tcp-edge
              containerPort: 8000
              protocol: TCP              
          livenessProbe:
            httpGet:
              path: /
              port: 9000
          readinessProbe:
            httpGet:
              path: /
              port: 9000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
